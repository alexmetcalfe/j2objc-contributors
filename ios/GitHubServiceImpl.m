//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/main/java/com/metcalfe/service/GitHubServiceImpl.java
//


#line 1 "src/main/java/com/metcalfe/service/GitHubServiceImpl.java"

#include "ContributorMapper.h"
#include "GitHubServiceImpl.h"
#include "HttpClient.h"
#include "J2ObjC_source.h"
#include "java/util/List.h"

@interface GitHubServiceImpl () {
 @public
  id<HttpClient> httpClient_;
}

@end

J2OBJC_FIELD_SETTER(GitHubServiceImpl, httpClient_, id<HttpClient>)

NSString *GitHubServiceImpl_API_URL_ = 
#line 12
@"https://api.github.com/repos/google/j2objc/contributors";


#line 10
@implementation GitHubServiceImpl


#line 16
- (instancetype)initWithHttpClient:(id<HttpClient>)simpleHttpClient {
  GitHubServiceImpl_initWithHttpClient_(self, simpleHttpClient);
  return self;
}

- (id<JavaUtilList>)contributors {
  NSString *json = [((id<HttpClient>) nil_chk(httpClient_)) performGetWithNSString:GitHubServiceImpl_API_URL_];
  return [new_ContributorMapper_init() mapAllWithNSString:json];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithHttpClient:", "GitHubServiceImpl", NULL, 0x1, NULL, NULL },
    { "contributors", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "API_URL_", NULL, 0x19, "Ljava.lang.String;", &GitHubServiceImpl_API_URL_, NULL,  },
    { "httpClient_", NULL, 0x2, "Lcom.metcalfe.service.HttpClient;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GitHubServiceImpl = { 2, "GitHubServiceImpl", "com.metcalfe.service", NULL, 0x1, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GitHubServiceImpl;
}

@end


#line 16
void GitHubServiceImpl_initWithHttpClient_(GitHubServiceImpl *self, id<HttpClient> simpleHttpClient) {
  (void) NSObject_init(self);
  
#line 17
  self->httpClient_ = simpleHttpClient;
}


#line 16
GitHubServiceImpl *new_GitHubServiceImpl_initWithHttpClient_(id<HttpClient> simpleHttpClient) {
  GitHubServiceImpl *self = [GitHubServiceImpl alloc];
  GitHubServiceImpl_initWithHttpClient_(self, simpleHttpClient);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GitHubServiceImpl)
