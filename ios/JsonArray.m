//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:libs/gson-2.3.1-sources.jar!com/google/gson/JsonArray.java
//


#line 1 "jar:file:libs/gson-2.3.1-sources.jar!com/google/gson/JsonArray.java"

#include "J2ObjC_source.h"
#include "JsonArray.h"
#include "JsonElement.h"
#include "JsonNull.h"
#include "java/lang/IllegalStateException.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface ComGoogleGsonJsonArray () {
 @public
  id<JavaUtilList> elements_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonJsonArray, elements_, id<JavaUtilList>)


#line 33
@implementation ComGoogleGsonJsonArray


#line 39
- (instancetype)init {
  ComGoogleGsonJsonArray_init(self);
  return self;
}

- (ComGoogleGsonJsonArray *)deepCopy {
  ComGoogleGsonJsonArray *result = new_ComGoogleGsonJsonArray_init();
  for (ComGoogleGsonJsonElement * __strong element in nil_chk(elements_)) {
    [result addWithComGoogleGsonJsonElement:[((ComGoogleGsonJsonElement *) nil_chk(element)) deepCopy]];
  }
  return result;
}


#line 57
- (void)addWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)element {
  if (element == nil) {
    element = ComGoogleGsonJsonNull_get_INSTANCE_();
  }
  [((id<JavaUtilList>) nil_chk(elements_)) addWithId:element];
}


#line 69
- (void)addAllWithComGoogleGsonJsonArray:(ComGoogleGsonJsonArray *)array {
  [((id<JavaUtilList>) nil_chk(elements_)) addAllWithJavaUtilCollection:((ComGoogleGsonJsonArray *) nil_chk(array))->elements_];
}


#line 81
- (ComGoogleGsonJsonElement *)setWithInt:(jint)index
            withComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)element {
  return [((id<JavaUtilList>) nil_chk(elements_)) setWithInt:index withId:element];
}


#line 92
- (jboolean)removeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)element {
  return [((id<JavaUtilList>) nil_chk(elements_)) removeWithId:element];
}


#line 105
- (ComGoogleGsonJsonElement *)removeWithInt:(jint)index {
  return [((id<JavaUtilList>) nil_chk(elements_)) removeWithInt:index];
}


#line 115
- (jboolean)containsWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)element {
  return [((id<JavaUtilList>) nil_chk(elements_)) containsWithId:element];
}


#line 124
- (jint)size {
  return [((id<JavaUtilList>) nil_chk(elements_)) size];
}


#line 134
- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilList>) nil_chk(elements_)) iterator];
}


#line 146
- (ComGoogleGsonJsonElement *)getWithInt:(jint)i {
  return [((id<JavaUtilList>) nil_chk(elements_)) getWithInt:i];
}


#line 159
- (NSNumber *)getAsNumber {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((ComGoogleGsonJsonElement *) nil_chk([elements_ getWithInt:0])) getAsNumber];
  }
  @throw new_JavaLangIllegalStateException_init();
}


#line 175
- (NSString *)getAsString {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((ComGoogleGsonJsonElement *) nil_chk([elements_ getWithInt:0])) getAsString];
  }
  @throw new_JavaLangIllegalStateException_init();
}


#line 191
- (jdouble)getAsDouble {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((ComGoogleGsonJsonElement *) nil_chk([elements_ getWithInt:0])) getAsDouble];
  }
  @throw new_JavaLangIllegalStateException_init();
}


#line 208
- (JavaMathBigDecimal *)getAsBigDecimal {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((ComGoogleGsonJsonElement *) nil_chk([elements_ getWithInt:0])) getAsBigDecimal];
  }
  @throw new_JavaLangIllegalStateException_init();
}


#line 225
- (JavaMathBigInteger *)getAsBigInteger {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((ComGoogleGsonJsonElement *) nil_chk([elements_ getWithInt:0])) getAsBigInteger];
  }
  @throw new_JavaLangIllegalStateException_init();
}


#line 241
- (jfloat)getAsFloat {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((ComGoogleGsonJsonElement *) nil_chk([elements_ getWithInt:0])) getAsFloat];
  }
  @throw new_JavaLangIllegalStateException_init();
}


#line 257
- (jlong)getAsLong {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((ComGoogleGsonJsonElement *) nil_chk([elements_ getWithInt:0])) getAsLong];
  }
  @throw new_JavaLangIllegalStateException_init();
}


#line 273
- (jint)getAsInt {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((ComGoogleGsonJsonElement *) nil_chk([elements_ getWithInt:0])) getAsInt];
  }
  @throw new_JavaLangIllegalStateException_init();
}


#line 281
- (jbyte)getAsByte {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((ComGoogleGsonJsonElement *) nil_chk([elements_ getWithInt:0])) getAsByte];
  }
  @throw new_JavaLangIllegalStateException_init();
}


#line 289
- (jchar)getAsCharacter {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((ComGoogleGsonJsonElement *) nil_chk([elements_ getWithInt:0])) getAsCharacter];
  }
  @throw new_JavaLangIllegalStateException_init();
}


#line 305
- (jshort)getAsShort {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((ComGoogleGsonJsonElement *) nil_chk([elements_ getWithInt:0])) getAsShort];
  }
  @throw new_JavaLangIllegalStateException_init();
}


#line 321
- (jboolean)getAsBoolean {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((ComGoogleGsonJsonElement *) nil_chk([elements_ getWithInt:0])) getAsBoolean];
  }
  @throw new_JavaLangIllegalStateException_init();
}


#line 329
- (jboolean)isEqual:(id)o {
  return (o == self) || ([o isKindOfClass:[ComGoogleGsonJsonArray class]] && [((id<JavaUtilList>) nil_chk(((ComGoogleGsonJsonArray *) nil_chk(((ComGoogleGsonJsonArray *) check_class_cast(o, [ComGoogleGsonJsonArray class]))))->elements_)) isEqual:elements_]);
}


#line 334
- (NSUInteger)hash {
  return ((jint) [((id<JavaUtilList>) nil_chk(elements_)) hash]);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "JsonArray", NULL, 0x1, NULL, NULL },
    { "deepCopy", NULL, "Lcom.google.gson.JsonArray;", 0x0, NULL, NULL },
    { "addWithComGoogleGsonJsonElement:", "add", "V", 0x1, NULL, NULL },
    { "addAllWithComGoogleGsonJsonArray:", "addAll", "V", 0x1, NULL, NULL },
    { "setWithInt:withComGoogleGsonJsonElement:", "set", "Lcom.google.gson.JsonElement;", 0x1, NULL, NULL },
    { "removeWithComGoogleGsonJsonElement:", "remove", "Z", 0x1, NULL, NULL },
    { "removeWithInt:", "remove", "Lcom.google.gson.JsonElement;", 0x1, NULL, NULL },
    { "containsWithComGoogleGsonJsonElement:", "contains", "Z", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "getWithInt:", "get", "Lcom.google.gson.JsonElement;", 0x1, NULL, NULL },
    { "getAsNumber", NULL, "Ljava.lang.Number;", 0x1, NULL, NULL },
    { "getAsString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getAsDouble", NULL, "D", 0x1, NULL, NULL },
    { "getAsBigDecimal", NULL, "Ljava.math.BigDecimal;", 0x1, NULL, NULL },
    { "getAsBigInteger", NULL, "Ljava.math.BigInteger;", 0x1, NULL, NULL },
    { "getAsFloat", NULL, "F", 0x1, NULL, NULL },
    { "getAsLong", NULL, "J", 0x1, NULL, NULL },
    { "getAsInt", NULL, "I", 0x1, NULL, NULL },
    { "getAsByte", NULL, "B", 0x1, NULL, NULL },
    { "getAsCharacter", NULL, "C", 0x1, NULL, NULL },
    { "getAsShort", NULL, "S", 0x1, NULL, NULL },
    { "getAsBoolean", NULL, "Z", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "elements_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lcom/google/gson/JsonElement;>;",  },
  };
  static const J2ObjcClassInfo _ComGoogleGsonJsonArray = { 2, "JsonArray", "com.google.gson", NULL, 0x11, 25, methods, 1, fields, 0, NULL, 0, NULL, NULL, "Lcom/google/gson/JsonElement;Ljava/lang/Iterable<Lcom/google/gson/JsonElement;>;" };
  return &_ComGoogleGsonJsonArray;
}

@end


#line 39
void ComGoogleGsonJsonArray_init(ComGoogleGsonJsonArray *self) {
  (void) ComGoogleGsonJsonElement_init(self);
  
#line 40
  self->elements_ = new_JavaUtilArrayList_init();
}


#line 39
ComGoogleGsonJsonArray *new_ComGoogleGsonJsonArray_init() {
  ComGoogleGsonJsonArray *self = [ComGoogleGsonJsonArray alloc];
  ComGoogleGsonJsonArray_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonJsonArray)
