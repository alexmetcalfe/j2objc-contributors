//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:libs/gson-2.3.1-sources.jar!com/google/gson/JsonParseException.java
//

#ifndef _ComGoogleGsonJsonParseException_H_
#define _ComGoogleGsonJsonParseException_H_

#include "J2ObjC_header.h"
#include "java/lang/RuntimeException.h"

@class JavaLangThrowable;

#define ComGoogleGsonJsonParseException_serialVersionUID -4086729973971783390LL

/**
 @brief This exception is raised if there is a serious issue that occurs during parsing of a Json string.
 One of the main usages for this class is for the Gson infrastructure.  If the incoming Json is bad/malicious, an instance of this exception is raised. <p>This exception is a RuntimeException because it is exposed to the client.  Using a RuntimeException avoids bad coding practices on the client side where they catch the exception and do nothing.  It is often the case that you want to blow up if there is a parsing error (i.e. often clients do not know how to recover from a JsonParseException .</p>
 @author Inderjeet Singh
 @author Joel Leitch
 */
@interface ComGoogleGsonJsonParseException : JavaLangRuntimeException

#pragma mark Public

/**
 @brief Creates exception with the specified message.
 If you are wrapping another exception, consider using #JsonParseException(String,Throwable) instead.
 @param msg error message describing a possible cause of this exception.
 */
- (instancetype)initWithNSString:(NSString *)msg;

/**
 @brief Creates exception with the specified message and cause.
 @param msg error message describing what happened.
 @param cause root exception that caused this exception to be thrown.
 */
- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)cause;

/**
 @brief Creates exception with the specified cause.
 Consider using #JsonParseException(String,Throwable) instead if you can describe what happened.
 @param cause root exception that caused this exception to be thrown.
 */
- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonJsonParseException)

J2OBJC_STATIC_FIELD_GETTER(ComGoogleGsonJsonParseException, serialVersionUID, jlong)

FOUNDATION_EXPORT void ComGoogleGsonJsonParseException_initWithNSString_(ComGoogleGsonJsonParseException *self, NSString *msg);

FOUNDATION_EXPORT ComGoogleGsonJsonParseException *new_ComGoogleGsonJsonParseException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComGoogleGsonJsonParseException_initWithNSString_withJavaLangThrowable_(ComGoogleGsonJsonParseException *self, NSString *msg, JavaLangThrowable *cause);

FOUNDATION_EXPORT ComGoogleGsonJsonParseException *new_ComGoogleGsonJsonParseException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComGoogleGsonJsonParseException_initWithJavaLangThrowable_(ComGoogleGsonJsonParseException *self, JavaLangThrowable *cause);

FOUNDATION_EXPORT ComGoogleGsonJsonParseException *new_ComGoogleGsonJsonParseException_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonJsonParseException)

#endif // _ComGoogleGsonJsonParseException_H_
