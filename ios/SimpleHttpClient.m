//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/main/java/com/metcalfe/service/SimpleHttpClient.java
//


#line 1 "src/main/java/com/metcalfe/service/SimpleHttpClient.java"

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "SimpleHttpClient.h"
#include "java/io/BufferedReader.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/lang/Exception.h"
#include "java/lang/StringBuilder.h"
#include "java/net/HttpURLConnection.h"
#include "java/net/URL.h"
#include "java/net/URLConnection.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"


#line 17
@implementation SimpleHttpClient

- (NSString *)performGetWithNSString:(NSString *)getUrl {
  JavaIoInputStream *is = nil;
  id<JavaUtilList> contributors = new_JavaUtilArrayList_init();
  @try {
    JavaNetURL *url = new_JavaNetURL_initWithNSString_(getUrl);
    JavaNetHttpURLConnection *conn = (JavaNetHttpURLConnection *) check_class_cast([url openConnection], [JavaNetHttpURLConnection class]);
    [((JavaNetHttpURLConnection *) nil_chk(conn)) setReadTimeoutWithInt:10000];
    [conn setConnectTimeoutWithInt:15000];
    [conn setRequestMethodWithNSString:@"GET"];
    [conn setDoInputWithBoolean:YES];
    
#line 30
    [conn connect];
    
#line 32
    jint response = [conn getResponseCode];
    is = [conn getInputStream];
    
#line 35
    return [self readItWithJavaIoInputStream:is];
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
  }
  @finally {
    
#line 40
    if (is != nil) {
      @try {
        [is close];
      }
      @catch (
#line 43
      JavaIoIOException *e) {
        [((JavaIoIOException *) nil_chk(e)) printStackTrace];
      }
    }
  }
  return nil;
}


#line 51
- (NSString *)readItWithJavaIoInputStream:(JavaIoInputStream *)stream {
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_init();
  JavaIoBufferedReader *reader = new_JavaIoBufferedReader_initWithJavaIoReader_(new_JavaIoInputStreamReader_initWithJavaIoInputStream_(stream));
  NSString *line;
  while ((line = [reader readLine]) != nil) {
    (void) [builder appendWithNSString:line];
  }
  return [builder description];
}

- (instancetype)init {
  SimpleHttpClient_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "performGetWithNSString:", "performGet", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "readItWithJavaIoInputStream:", "readIt", "Ljava.lang.String;", 0x1, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _SimpleHttpClient = { 2, "SimpleHttpClient", "com.metcalfe.service", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_SimpleHttpClient;
}

@end

void SimpleHttpClient_init(SimpleHttpClient *self) {
  (void) NSObject_init(self);
}

SimpleHttpClient *new_SimpleHttpClient_init() {
  SimpleHttpClient *self = [SimpleHttpClient alloc];
  SimpleHttpClient_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SimpleHttpClient)
